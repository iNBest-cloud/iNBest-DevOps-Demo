name: SonarCloud Quality Gate

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Requerido para análisis completo

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x' # Ajusta a tu versión de .NET

      - name: Install SonarCloud Scanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Install Coverlet for test coverage
        run: dotnet tool install --global coverlet.console

      - name: Debug token length
        run: |
          Write-Output "Token length: $($env:SONAR_TOKEN.Length)"
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Build and analyze with SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.PROYK }}
          SONAR_ORG: ${{ secrets.ORG }}
        run: |
          dotnet sonarscanner begin `
            /k:"$env:SONAR_PROJECT_KEY" `
            /o:"$env:SONAR_ORG" `
            /d:sonar.login=$env:SONAR_TOKEN `
            /d:sonar.exclusions="**/bin/**,**/obj/**,**/Migrations/**" `
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"

          dotnet restore
          dotnet build --no-incremental
          dotnet test /p:CollectCoverage=true /p:CoverletOutput=./coverage/ /p:CoverletOutputFormat=opencover
          dotnet sonarscanner end /d:sonar.login=$env:SONAR_TOKEN

      - name: Check Quality Gate via API
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "Checking SonarCloud Quality Gate..."
          status=$(curl -s -u ${{ secrets.SONAR_TOKEN }}: \
            "https://sonarcloud.io/api/qualitygates/project_status?projectKey=${{ secrets.PROYK }}" \
            | jq -r '.projectStatus.status')
          
          echo "Quality Gate Status: $status"
          if [ "$status" != "OK" ]; then
            echo "Quality Gate failed!"
            exit 1
          fi

